version: 2.1

orbs:
  python: circleci/python@1.2
  docker: circleci/docker@2.1.3
  heroku: circleci/heroku@2.0.0

jobs:
  linter_and_tests:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: pytest --pyargs
      - run:
          name: Run Linter
          command: flake8

  docker_deployment:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      #password stdin pour evit√© qu'il soit visible dans les logs ou l'historique du shell
      - run: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run: docker build -t $DOCKERHUB_USERNAME/python-oc-lettings-fr:$CIRCLE_SHA1 .
      - run: docker push $DOCKERHUB_USERNAME/python-oc-lettings-fr:$CIRCLE_SHA1

  heroku_deployment:
    machine: true
    steps:
      - checkout
      - run:
          name: Heroku CLI installation
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Deploy Heroku
          command:   |
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a ${HEROKU_APP_NAME} web
              HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a ${HEROKU_APP_NAME} web



workflows:
  Run Tests and Deploy:
    jobs:
      - linter_and_tests
      - docker_deployment:
          requires:
            - linter_and_tests
          filters:
            branches:
              only: master
      - heroku_deployment:
          requires:
            - linter_and_tests
            - docker_deployment
          filters:
            branches:
              only: master
